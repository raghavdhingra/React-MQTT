{"version":3,"sources":["script/common/header/header.jsx","script/common/body/body.jsx","script/common/loader/loader.jsx","script/common/button/button.jsx","script/common/input/input.jsx","script/common/hr/hr.jsx","script/common/card/card.jsx","script/common/container/container.jsx","script/RecoilAtom/state.js","script/components/Login/Login.jsx","script/common/navbar/navbar.jsx","script/components/Dashboard/dashboard.jsx","script/common/alert/alert.jsx","script/components/Dashboard/AppList/appList.js","script/components/Dashboard/AppList/dashboardAppList.jsx","script/common/pointStatus/pointStatus.jsx","script/common/button/roundButton.jsx","images/arrow.svg","script/components/Dashboard/internetCarRemote/internetCarRemote.jsx","script/components/base.jsx","index.jsx"],"names":["Header","children","align","alignClass","center","default","className","Body","Loader","variant","variantClass","dark","Button","title","margin","isLink","href","onClick","isDisabled","isLoading","primary","secondary","danger","warning","info","success","to","disabled","Input","placeholder","type","value","onChange","e","target","Hr","Card","isShadow","isMinHeight","backgroundImage","Container","loginState","atom","key","loadingState","warningAlert","successAlert","infoAlert","errorAlert","credentialAtom","username","password","Login","useRecoilState","credentials","setCredentials","isLoggedIn","setIsLoggedIn","setIsLoading","setErrorMsg","setSuccessMsg","setWarningMsg","history","useHistory","changeValue","val","useEffect","replace","mqttValidation","mqtt","connect","protocol","port","on","Navbar","successMsg","push","Dashboard","Alert","handleDismiss","typeClass","error","setTimeout","APP_LIST","name","image","AppList","map","app","index","PointStatus","isConnected","RoundButton","MqttClient","InternetCarRemote","useState","setIsConnected","setInfoMsg","ARROW_WIDTH","connectToMQTT","src","ARROW","alt","width","Base","location","useLocation","errorMsg","infoMsg","warningMsg","pathname","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uqBAiBeA,EAdA,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACpBC,EAAa,CACjBC,OAAQ,SACRC,QAAS,WAEX,OACE,qBACEC,UAAS,yBAAoBH,EAAWD,IAAUC,EAAWE,SAD/D,SAGGJ,KCDQM,G,OARF,SAAC,GAAkB,IAAhBN,EAAe,EAAfA,SACd,OACE,mCACE,qBAAKK,UAAU,OAAf,SAAuBL,Q,QCcdO,G,OAjBA,SAAC,GAA4B,IAA1BF,EAAyB,EAAzBA,UAAWG,EAAc,EAAdA,QACrBC,EAAe,CACnBL,QAAS,UACTM,KAAM,QAGR,OACE,qBAAKL,UAAS,6BAAwBA,GAAa,IAAnD,SACE,qBACEA,UAAS,yBACPI,EAAaA,EAAaD,IAAYC,EAAaL,gBCsC9CO,G,OA9CA,SAAC,GAUT,IATLC,EASI,EATJA,MACAC,EAQI,EARJA,OACAL,EAOI,EAPJA,QACAM,EAMI,EANJA,OACAC,EAKI,EALJA,KACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,UACAb,EACI,EADJA,UAEMI,EAAe,CACnBU,QAAS,UACTC,UAAW,YACXC,OAAQ,SACRC,QAAS,UACTC,KAAM,OACNC,QAAS,WAGX,OACE,qBAAKnB,UAAS,oCAA+BA,GAAa,IAA1D,SACIS,EAWA,cAAC,IAAD,CACET,UAAS,yBAAoBQ,EAApB,0BACPJ,EAAaD,IAAYC,EAAaU,SAExCM,GAAIR,EAAa,GAAKF,EAJxB,SAMGG,EAAY,cAAC,EAAD,IAAa,+BAAON,MAhBnC,wBACEP,UAAS,yBAAoBQ,EAApB,0BACPJ,EAAaD,IAAYC,EAAaU,SAExCH,QAASA,EACTU,SAAUT,EALZ,SAOGC,EAAY,cAAC,EAAD,IAAa,+BAAON,UCb5Be,G,OAnBD,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,YAAaC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,SAAUlB,EAAyB,EAAzBA,OAAQI,EAAiB,EAAjBA,WAO3D,OACE,uBACEZ,UAAS,uBAAkBQ,EAAlB,UACTe,YAAaA,EACbC,KAAMA,EACNC,MAAOA,EACPJ,SAAUT,EACVc,SAbiB,SAACC,GAChBD,GACFA,EAASC,EAAEC,OAAOH,YCGTI,G,OANJ,SAAC,GAAiB,IACrBzB,EAA2B,SADP,EAAdD,QAC8B,OAAS,UAEnD,OAAO,qBAAKH,UAAS,iBAAYI,OCsBpB0B,G,OAzBF,SAAC,GAMP,IALL3B,EAKI,EALJA,QACAR,EAII,EAJJA,SACAoC,EAGI,EAHJA,SACAC,EAEI,EAFJA,YACAC,EACI,EADJA,gBAEM7B,EAAe,CACnBC,KAAM,OACNN,QAAS,WAGX,OACE,qBACEC,UAAS,qBACPI,EAAaD,IAAYC,EAAaL,QAD/B,kBAECgC,EAAW,SAAW,GAFvB,kBAGPC,EAAc,aAAe,GAHtB,qCAIoBC,GAAmB,IALlD,SAOGtC,MChBQuC,G,OAJG,SAAC,GAAkB,IAAhBvC,EAAe,EAAfA,SACnB,OAAO,qBAAKK,UAAU,YAAf,SAA4BL,MCFxBwC,EAAaC,YAAK,CAC7BC,IAAK,aACLtC,SAAS,IAGEuC,EAAeF,YAAK,CAC/BC,IAAK,UACLtC,SAAS,IAGEwC,EAAeH,YAAK,CAC/BC,IAAK,UACLtC,QAAS,KAEEyC,EAAeJ,YAAK,CAC/BC,IAAK,UACLtC,QAAS,KAEE0C,EAAYL,YAAK,CAC5BC,IAAK,OACLtC,QAAS,KAEE2C,EAAaN,YAAK,CAC7BC,IAAK,QACLtC,QAAS,KAGE4C,EAAiBP,YAAK,CACjCC,IAAK,iBACLtC,QAAS,CACP6C,SAAU,gBACVC,SAAU,gBCmFCC,G,OA9FD,WAAO,IAAD,EACoBC,YAAeJ,GADnC,mBACXK,EADW,KACEC,EADF,OAEkBF,YAAeZ,GAFjC,mBAEXe,EAFW,KAECC,EAFD,OAGgBJ,YAAeT,GAH/B,mBAGXzB,EAHW,KAGAuC,EAHA,OAKcL,YAAeL,GAL7B,mBAKDW,GALC,aAOkBN,YAAeP,GAPjC,mBAOCc,GAPD,aASkBP,YAAeR,GATjC,mBASCgB,GATD,WAWZC,EAAUC,cAEVC,EAAc,SAACrB,EAAKsB,GACxBV,EAAe,2BAAKD,GAAN,kBAAoBX,EAAMsB,MAG1CC,qBAAU,WACJV,GACFM,EAAQK,QAAQ,gBAEjB,CAACL,EAASN,IAqCb,OACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,eAAC,EAAD,CAAM/C,QAAQ,OAAO4B,UAAQ,EAA7B,UACE,cAAC,EAAD,oBACA,cAAC,EAAD,IACA,eAAC,EAAD,WACE,cAAC,EAAD,CACER,YAAY,WACZC,KAAK,OACLZ,WAAYC,EACZY,MAAOuB,EAAYJ,SACnBlB,SAAU,SAACC,GAAD,OAAO+B,EAAY,WAAY/B,MAE3C,cAAC,EAAD,CACEJ,YAAY,WACZX,WAAYC,EACZW,KAAK,WACLC,MAAOuB,EAAYH,SACnBrC,OAAO,MACPkB,SAAU,SAACC,GAAD,OAAO+B,EAAY,WAAY/B,MAE3C,cAAC,EAAD,CACEf,WAAYC,EACZA,UAAWA,EACXN,MAAM,WACNC,OAAO,MACPG,QA9DgB,WAI1B,GAHAyC,GAAa,GACbG,EAAc,6BAEVP,EAAYJ,UAAYI,EAAYH,SAAU,CAChD,IAIMiB,EAAiBC,IAAKC,QAAL,UAH2B,MAG3B,6BAErB,CACEpB,SAAUI,EAAYJ,SACtBC,SAAUG,EAAYH,SACtBoB,SAR8C,MAS9CC,KAPgD,SAUpDJ,EAAeK,GAAG,SAAS,WACzBf,GAAa,GACbC,EAAY,uBACZF,GAAc,MAEhBW,EAAeK,GAAG,WAAW,WAC3Bf,GAAa,GACbE,EAAc,0BACdH,GAAc,WAGhBC,GAAa,GACbC,EAAY,oBACZF,GAAc,kBCxBLiB,G,OAxCA,SAAC,GAAmB,IAAjBpE,EAAgB,EAAhBA,UAAgB,EACM+C,YAAeJ,GADrB,mBACzBK,EADyB,KACZC,EADY,OAEEF,YAAeT,GAFjB,mBAEzBzB,EAFyB,KAEduC,EAFc,OAGIL,YAAeZ,GAHnB,mBAGzBe,EAHyB,KAGbC,EAHa,OAIIJ,YAAeP,GAJnB,mBAIzB6B,EAJyB,KAIbf,EAJa,KAK1BE,EAAUC,cAahB,OACE,sBAAKzD,UAAS,iBAAYA,GAAa,IAAvC,UACE,cAAC,EAAD,CACEO,MAAM,OACNP,UAAU,aACVW,QAAS,kBAAM6C,EAAQc,KAAK,eAC5BnE,QAAQ,YAEV,sBAAKH,UAAU,mBAAf,UACE,uBAAMA,UAAU,mBAAhB,0BAAuCgD,EAAYJ,YACnD,cAAC,EAAD,CACErC,MAAM,SACNI,QAvBc,WAChBuC,IACFD,EAAe,CAAEL,SAAU,GAAIC,SAAU,KACzCO,GAAa,GACbD,GAAc,GACK,4BAAfkB,GACFf,EAAc,6BAkBZ1C,WAAYC,EACZA,UAAWA,EACXV,QAAQ,mBC/BHoE,G,OATG,SAAC,GAAkB,IAAhB5E,EAAe,EAAfA,SACnB,OACE,eAAC,EAAD,WACE,cAAC,EAAD,IACCA,OCkBQ6E,G,OAxBD,SAAC,GAAoC,IAAlCjE,EAAiC,EAAjCA,MAAOiB,EAA0B,EAA1BA,KAAMiD,EAAoB,EAApBA,cACtBC,EAAY,CAChBxD,KAAM,OACNyD,MAAO,QACP1D,QAAS,UACTE,QAAS,WAYX,OATAyC,qBAAU,WACJa,GACFG,YAAW,WACTH,MACC,OAGJ,IAEIlE,EACL,qBAAKP,UAAS,uBAAkB0E,EAAUlD,IAASkD,EAAUxD,MAA7D,SACGX,IAED,OCxBOsE,EAAW,CACtB,CACEC,KAAM,sBACNC,MAAO,MACP1C,IAAK,sBACL3B,KAAM,wBAER,CACEoE,KAAM,yBACNC,MAAO,OACP1C,IAAK,yBACL3B,KAAM,4BCoBKsE,G,OAxBC,SAAC,GAAmB,IAAjBhF,EAAgB,EAAhBA,UACjB,OACE,qBAAKA,UAAS,mBAAcA,GAAa,IAAzC,SACG6E,EAASI,KAAI,SAACC,EAAKC,GAAN,OACZ,eAAC,EAAD,CAEEpD,UAAQ,EACR5B,QAASgF,EAAQ,IAAM,EAAI,OAAS,GACpCnD,aAAW,EACXC,gBAAiBiD,EAAIH,MALvB,UAOE,cAAC,EAAD,CAAQnF,MAAM,SAAd,SAAwBsF,EAAIJ,OAC5B,cAAC,EAAD,CACEvE,MAAM,UACNJ,QAASgF,EAAQ,IAAM,EAAI,OAAS,YACpCzE,KAAI,oBAAewE,EAAIxE,MACvBD,QAAM,MAXHyE,EAAI7C,YCCJ+C,G,OAVK,SAAC,GAAgC,IAA9BpF,EAA6B,EAA7BA,UAAWqF,EAAkB,EAAlBA,YAChC,OACE,qBACErF,UAAS,qCACPqF,EAAc,YAAc,gBADrB,YAELrF,GAAa,QCwBRsF,EA9BK,SAAC,GAOd,IANLtF,EAMI,EANJA,UACAW,EAKI,EALJA,QACAJ,EAII,EAJJA,MACAJ,EAGI,EAHJA,QACAK,EAEI,EAFJA,OACAb,EACI,EADJA,SAEMS,EAAe,CACnBU,QAAS,UACTC,UAAW,YACXC,OAAQ,SACRC,QAAS,UACTC,KAAM,OACNC,QAAS,WAGX,OACE,yBACER,QAASA,EACTX,UAAS,uCAAkCQ,EAAlC,0BACPL,EAAUC,EAAaD,GAAWC,EAAaU,QADxC,YAELd,GAAa,IAJnB,UAMGO,EACAZ,MC3BQ,MAA0B,kCCmBrC4F,EAAa,KA4GFC,EA3GW,WAAO,IAAD,EACQC,oBAAS,GADjB,mBACvBJ,EADuB,KACVK,EADU,OAER3C,YAAeJ,GAA9BK,EAFuB,sBAIID,YAAeT,GAJnB,mBAIZc,GAJY,aAMEL,YAAeL,GANjB,mBAMbW,GANa,aAQMN,YAAeP,GARrB,mBAQXc,GARW,aAUMP,YAAeR,GAVrB,mBAUXgB,GAVW,aAYAR,YAAeN,GAZf,mBAYdkD,GAZc,WAcxBC,EAAc,OAEdC,EAAgB,WAEpB,GADAtC,EAAc,wBACVP,EAAYJ,UAAYI,EAAYH,SAAU,CAChDO,GAAa,IAKbmC,EAAaxB,IAAKC,QAAL,UAHqC,MAGrC,6BAAyD,CACpEpB,SAAUI,EAAYJ,SACtBC,SAAUG,EAAYH,SACtBoB,SANgD,MAOhDC,KALkD,UAOzCC,GAAG,WAAW,WACvBuB,GAAe,GACftC,GAAa,GACbE,EAAc,2BAEhBiC,EAAWpB,GAAG,SAAS,WACrBuB,GAAe,GACftC,GAAa,GACbC,EAAY,qCAGdqC,GAAe,GACftC,GAAa,GACbE,EAAc,2BAelB,OALAM,qBAAU,WACRiC,MAEC,CAAC7C,IAGF,eAAC,EAAD,WACE,cAAC,EAAD,CAAMjB,UAAQ,EAAC5B,QAAQ,UAAvB,SACE,eAAC,EAAD,WACE,cAAC,EAAD,CAAakF,YAAaA,IAAgB,IACzCA,EAAc,SAAW,gBAG9B,cAAC,EAAD,CAAMtD,UAAQ,EAAC5B,QAAQ,UAAvB,SACE,eAAC,EAAD,CAAMA,QAAQ,OAAd,UACE,qBAAKH,UAAU,0BAAf,SACE,cAAC,EAAD,CACEG,QAAQ,SACRK,OAAO,OACPR,UAAU,oBAHZ,SAKE,qBAAK8F,IAAKC,EAAOC,IAAI,aAAaC,MAAOL,QAG7C,sBAAK5F,UAAU,iDAAf,UACE,cAAC,EAAD,CAAaG,QAAQ,SAASH,UAAU,sBAAxC,SACE,qBAAK8F,IAAKC,EAAOC,IAAI,aAAaC,MAAOL,MAE3C,cAAC,EAAD,CAAazF,QAAQ,SAASH,UAAU,uBAAxC,SACE,qBAAK8F,IAAKC,EAAOC,IAAI,aAAaC,MAAOL,SAG7C,qBAAK5F,UAAU,0BAAf,SACE,cAAC,EAAD,CACEG,QAAQ,SACRK,OAAO,OACPR,UAAU,sBAHZ,SAKE,qBAAK8F,IAAKC,EAAOC,IAAI,aAAaC,MAAOL,aAKjD,cAAC,EAAD,CAAM7D,UAAQ,EAAd,SACE,cAAC,EAAD,CACE5B,QAAQ,OACRI,MAAO8E,EAAc,aAAe,UACpC1E,QAAS0E,EArDM,WACrBK,GAAe,GACfH,EAAa,KACbI,EAAW,8BAkDmCE,UCnCnCK,EArEF,WACX,IAAM1C,EAAUC,cACV0C,EAAWC,cAFA,EAGIrD,YAAeZ,GAA7Be,EAHU,sBAIeH,YAAeL,GAJ9B,mBAIV2D,EAJU,KAIAhD,EAJA,OAKmBN,YAAeP,GALlC,mBAKV6B,EALU,KAKEf,EALF,OAMaP,YAAeN,GAN5B,mBAMV6D,EANU,KAMDX,EANC,OAOmB5C,YAAeR,GAPlC,mBAOVgE,EAPU,KAOEhD,EAPF,KAejB,OANAK,qBAAU,WACHV,GAAoC,UAAtBiD,EAASK,UAC1BhD,EAAQc,KAAK,YAEd,CAACpB,EAAYM,EAAS2C,EAASK,WAGhC,qCACE,sBAAKxG,UAAU,mBAAf,UACGqG,GACC,cAAC,EAAD,CACE7E,KAAK,QACLjB,MAAO8F,EACP5B,cAAe,kBAAMpB,EAAY,OAGpCiD,GACC,cAAC,EAAD,CACE9E,KAAK,OACLjB,MAAO+F,EACP7B,cAAe,kBAAMkB,EAAW,OAGnCY,GACC,cAAC,EAAD,CACE/E,KAAK,UACLjB,MAAOgG,EACP9B,cAAe,kBAAMlB,EAAc,OAGtCc,GACC,cAAC,EAAD,CACE7C,KAAK,UACLjB,MAAO8D,EACPI,cAAe,kBAAMnB,EAAc,UAKzC,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmD,KAAK,SAASC,OAAK,EAA1B,SACE,cAAC,EAAD,MAEF,eAAC,IAAD,CAAOD,KAAK,aAAZ,UACE,cAAC,IAAD,CAAOA,KAAK,aAAaC,OAAK,EAA9B,SACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAS1G,UAAU,4BAGvB,cAAC,IAAD,CAAOyG,KAAK,iCAAiCC,OAAK,EAAlD,SACE,cAAC,EAAD,UACE,cAAC,EAAD,kB,OCpEdC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,UAINC,SAASC,eAAe,U","file":"static/js/main.dba2ff73.chunk.js","sourcesContent":["import React from 'react';\nimport './header.scss';\n\nconst Header = ({ children, align }) => {\n  const alignClass = {\n    center: 'center',\n    default: 'default',\n  };\n  return (\n    <div\n      className={`header header--${alignClass[align] || alignClass.default}`}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './body.scss';\n\nconst Body = ({ children }) => {\n  return (\n    <>\n      <div className='body'>{children}</div>\n    </>\n  );\n};\n\nexport default Body;\n","import React from 'react';\nimport './loader.scss';\n\nconst Loader = ({ className, variant }) => {\n  const variantClass = {\n    default: 'default',\n    dark: 'dark',\n  };\n\n  return (\n    <div className={`loader__container  ${className || ''}`}>\n      <div\n        className={`loader loader--${\n          variantClass[variantClass[variant] || variantClass.default]\n        }`}\n      ></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Loader from '../loader/loader';\nimport './button.scss';\n\nconst Button = ({\n  title,\n  margin,\n  variant,\n  isLink,\n  href,\n  onClick,\n  isDisabled,\n  isLoading,\n  className,\n}) => {\n  const variantClass = {\n    primary: 'primary',\n    secondary: 'secondary',\n    danger: 'danger',\n    warning: 'warning',\n    info: 'info',\n    success: 'success',\n  };\n\n  return (\n    <div className={`button__container button--${className || ''}`}>\n      {!isLink ? (\n        <button\n          className={`button button__${margin}Margin button__${\n            variantClass[variant] || variantClass.primary\n          }`}\n          onClick={onClick}\n          disabled={isDisabled}\n        >\n          {isLoading ? <Loader /> : <span>{title}</span>}\n        </button>\n      ) : (\n        <Link\n          className={`button button__${margin}Margin button__${\n            variantClass[variant] || variantClass.primary\n          }`}\n          to={isDisabled ? '' : href}\n        >\n          {isLoading ? <Loader /> : <span>{title}</span>}\n        </Link>\n      )}\n    </div>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport './input.scss';\n\nconst Input = ({ placeholder, type, value, onChange, margin, isDisabled }) => {\n  const handleChange = (e) => {\n    if (onChange) {\n      onChange(e.target.value);\n    }\n  };\n\n  return (\n    <input\n      className={`input input__${margin}Margin`}\n      placeholder={placeholder}\n      type={type}\n      value={value}\n      disabled={isDisabled}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport './hr.scss';\n\nconst Hr = ({ variant }) => {\n  const variantClass = variant === 'dark' ? 'dark' : 'default';\n\n  return <div className={`hr hr__${variantClass}`} />;\n};\n\nexport default Hr;\n","import React from 'react';\nimport './card.scss';\n\nconst Card = ({\n  variant,\n  children,\n  isShadow,\n  isMinHeight,\n  backgroundImage,\n}) => {\n  const variantClass = {\n    dark: 'dark',\n    default: 'default',\n  };\n\n  return (\n    <div\n      className={`card card__${\n        variantClass[variant] || variantClass.default\n      } card__${isShadow ? 'shadow' : ''} card__${\n        isMinHeight ? 'min_height' : ''\n      } card__image card__image--${backgroundImage || ''}`}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport './container.scss';\n\nconst Container = ({ children }) => {\n  return <div className='container'>{children}</div>;\n};\n\nexport default Container;\n","import { atom } from 'recoil';\n\nexport const loginState = atom({\n  key: 'loginState',\n  default: false,\n});\n\nexport const loadingState = atom({\n  key: 'loading',\n  default: false,\n});\n\nexport const warningAlert = atom({\n  key: 'warning',\n  default: '',\n});\nexport const successAlert = atom({\n  key: 'success',\n  default: '',\n});\nexport const infoAlert = atom({\n  key: 'info',\n  default: '',\n});\nexport const errorAlert = atom({\n  key: 'error',\n  default: '',\n});\n\nexport const credentialAtom = atom({\n  key: 'credentialAtom',\n  default: {\n    username: 'raghavdhingra',\n    password: 'qwerty1234',\n  },\n});\n","import React, { useEffect } from 'react';\nimport mqtt from 'mqtt';\nimport { useHistory } from 'react-router';\nimport { useRecoilState } from 'recoil';\nimport Header from '../../common/header/header';\nimport Body from '../../common/body/body';\nimport Button from '../../common/button/button';\nimport Input from '../../common/input/input';\nimport Hr from '../../common/hr/hr';\nimport Card from '../../common/card/card';\nimport Container from '../../common/container/container';\nimport {\n  credentialAtom,\n  loginState,\n  loadingState,\n  errorAlert,\n  successAlert,\n  warningAlert,\n} from '../../RecoilAtom/state';\n\nimport './Login.scss';\n\nconst Login = () => {\n  const [credentials, setCredentials] = useRecoilState(credentialAtom);\n  const [isLoggedIn, setIsLoggedIn] = useRecoilState(loginState);\n  const [isLoading, setIsLoading] = useRecoilState(loadingState);\n  // eslint-disable-next-line\n  const [errorMsg, setErrorMsg] = useRecoilState(errorAlert);\n  // eslint-disable-next-line\n  const [successMsg, setSuccessMsg] = useRecoilState(successAlert);\n  // eslint-disable-next-line\n  const [warningMsg, setWarningMsg] = useRecoilState(warningAlert);\n\n  const history = useHistory();\n\n  const changeValue = (key, val) => {\n    setCredentials({ ...credentials, [key]: val });\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      history.replace('/dashboard');\n    }\n  }, [history, isLoggedIn]);\n\n  const establishConnection = () => {\n    setIsLoading(true);\n    setWarningMsg('Connection is Progress...');\n\n    if (credentials.username && credentials.password) {\n      const protocolType =\n        process.env.NODE_ENV === 'development' ? 'ws' : 'wss';\n      const portNumber =\n        process.env.NODE_ENV === 'development' ? '3033' : '8083';\n      const mqttValidation = mqtt.connect(\n        `${protocolType}://mqtt.raghavdhingra.com`,\n        {\n          username: credentials.username,\n          password: credentials.password,\n          protocol: protocolType,\n          port: portNumber,\n        }\n      );\n      mqttValidation.on('error', () => {\n        setIsLoading(false);\n        setErrorMsg('Invalid Credentials');\n        setIsLoggedIn(false);\n      });\n      mqttValidation.on('connect', () => {\n        setIsLoading(false);\n        setSuccessMsg('Connection Established');\n        setIsLoggedIn(true);\n      });\n    } else {\n      setIsLoading(false);\n      setErrorMsg('Empty Credential');\n      setIsLoggedIn(false);\n    }\n  };\n\n  return (\n    <Container>\n      <Card>\n        <Card variant='dark' isShadow>\n          <Header>Login</Header>\n          <Hr />\n          <Body>\n            <Input\n              placeholder='Username'\n              type='text'\n              isDisabled={isLoading}\n              value={credentials.username}\n              onChange={(e) => changeValue('username', e)}\n            />\n            <Input\n              placeholder='Password'\n              isDisabled={isLoading}\n              type='password'\n              value={credentials.password}\n              margin='top'\n              onChange={(e) => changeValue('password', e)}\n            />\n            <Button\n              isDisabled={isLoading}\n              isLoading={isLoading}\n              title='Check In'\n              margin='top'\n              onClick={establishConnection}\n            />\n          </Body>\n        </Card>\n      </Card>\n    </Container>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { useRecoilState } from 'recoil';\nimport {\n  credentialAtom,\n  loadingState,\n  loginState,\n  successAlert,\n} from '../../RecoilAtom/state';\nimport { useHistory } from 'react-router-dom';\nimport Button from '../button/button';\nimport './navbar.scss';\n\nconst Navbar = ({ className }) => {\n  const [credentials, setCredentials] = useRecoilState(credentialAtom);\n  const [isLoading, setIsLoading] = useRecoilState(loadingState);\n  const [isLoggedIn, setIsLoggedIn] = useRecoilState(loginState);\n  const [successMsg, setSuccessMsg] = useRecoilState(successAlert);\n  const history = useHistory();\n\n  const logoutSession = () => {\n    if (isLoggedIn) {\n      setCredentials({ username: '', password: '' });\n      setIsLoading(false);\n      setIsLoggedIn(false);\n      if (successMsg === 'Successfully Logged out') {\n        setSuccessMsg('Successfully Logged out');\n      }\n    }\n  };\n\n  return (\n    <div className={`navbar ${className || ''}`}>\n      <Button\n        title='Home'\n        className='not-center'\n        onClick={() => history.push('/dashboard')}\n        variant='warning'\n      />\n      <div className='navbar__leftFlex'>\n        <span className='navbar__username'>🏠 {credentials.username}</span>\n        <Button\n          title='Logout'\n          onClick={logoutSession}\n          isDisabled={isLoading}\n          isLoading={isLoading}\n          variant='danger'\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport Container from '../../common/container/container';\nimport Navbar from '../../common/navbar/navbar';\nimport './dashboard.scss';\n\nconst Dashboard = ({ children }) => {\n  return (\n    <Container>\n      <Navbar />\n      {children}\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","import React, { useEffect } from 'react';\nimport './alert.scss';\n\nconst Alert = ({ title, type, handleDismiss }) => {\n  const typeClass = {\n    info: 'info',\n    error: 'error',\n    warning: 'warning',\n    success: 'success',\n  };\n\n  useEffect(() => {\n    if (handleDismiss) {\n      setTimeout(() => {\n        handleDismiss();\n      }, 2000);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return title ? (\n    <div className={`alert alert__${typeClass[type] || typeClass.info}`}>\n      {title}\n    </div>\n  ) : null;\n};\n\nexport default Alert;\n","export const APP_LIST = [\n  {\n    name: 'Internet Car Remote',\n    image: 'car',\n    key: 'INTERNET_CAR_REMOTE',\n    href: '/internet-car-remote',\n  },\n  {\n    name: 'Workspace Light Switch',\n    image: 'bulb',\n    key: 'WORKSPACE_LIGHT_SWITCH',\n    href: '/workspace-light-switch',\n  },\n];\n","import React from 'react';\nimport { APP_LIST } from './appList';\nimport Card from '../../../common/card/card';\nimport Header from '../../../common/header/header';\nimport Button from '../../../common/button/button';\nimport './dashboardAppList.scss';\n\nconst AppList = ({ className }) => {\n  return (\n    <div className={`app_list ${className || ''}`}>\n      {APP_LIST.map((app, index) => (\n        <Card\n          key={app.key}\n          isShadow\n          variant={index % 3 === 0 ? 'dark' : ''}\n          isMinHeight\n          backgroundImage={app.image}\n        >\n          <Header align='center'>{app.name}</Header>\n          <Button\n            title='Connect'\n            variant={index % 3 === 0 ? 'info' : 'secondary'}\n            href={`/dashboard${app.href}`}\n            isLink\n          />\n        </Card>\n      ))}\n    </div>\n  );\n};\n\nexport default AppList;\n","import React from 'react';\nimport './pointStatus.scss';\n\nconst PointStatus = ({ className, isConnected }) => {\n  return (\n    <div\n      className={`point_status point_status--${\n        isConnected ? 'connected' : 'not-connected'\n      } ${className || ''}`}\n    ></div>\n  );\n};\n\nexport default PointStatus;\n","import React from 'react';\n\nconst RoundButton = ({\n  className,\n  onClick,\n  title,\n  variant,\n  margin,\n  children,\n}) => {\n  const variantClass = {\n    primary: 'primary',\n    secondary: 'secondary',\n    danger: 'danger',\n    warning: 'warning',\n    info: 'info',\n    success: 'success',\n  };\n\n  return (\n    <button\n      onClick={onClick}\n      className={`button button--round button__${margin}Margin button__${\n        variant ? variantClass[variant] : variantClass.primary\n      } ${className || ''}`}\n    >\n      {title}\n      {children}\n    </button>\n  );\n};\n\nexport default RoundButton;\n","export default __webpack_public_path__ + \"static/media/arrow.9d3e8a82.svg\";","import React, { useEffect, useState } from 'react';\nimport mqtt from 'mqtt';\nimport { useRecoilState } from 'recoil';\nimport Card from '../../../common/card/card';\nimport Container from '../../../common/container/container';\nimport {\n  credentialAtom,\n  errorAlert,\n  infoAlert,\n  loadingState,\n  successAlert,\n  warningAlert,\n} from '../../../RecoilAtom/state';\nimport Header from '../../../common/header/header';\nimport PointStatus from '../../../common/pointStatus/pointStatus';\nimport RoundButton from '../../../common/button/roundButton';\nimport Button from '../../../common/button/button';\nimport ARROW from '../../../../images/arrow.svg';\n\nlet MqttClient = null;\nconst InternetCarRemote = () => {\n  const [isConnected, setIsConnected] = useState(false);\n  const [credentials] = useRecoilState(credentialAtom);\n  // eslint-disable-next-line\n  const [isLoading, setIsLoading] = useRecoilState(loadingState);\n  // eslint-disable-next-line\n  const [errorMsg, setErrorMsg] = useRecoilState(errorAlert);\n  // eslint-disable-next-line\n  const [successMsg, setSuccessMsg] = useRecoilState(successAlert);\n  // eslint-disable-next-line\n  const [warningMsg, setWarningMsg] = useRecoilState(warningAlert);\n  // eslint-disable-next-line\n  const [infoMsg, setInfoMsg] = useRecoilState(infoAlert);\n\n  const ARROW_WIDTH = '40px';\n\n  const connectToMQTT = () => {\n    setWarningMsg('Connecting to Car...');\n    if (credentials.username && credentials.password) {\n      setIsLoading(true);\n      const protocolType =\n        process.env.NODE_ENV === 'development' ? 'ws' : 'wss';\n      const portNumber =\n        process.env.NODE_ENV === 'development' ? '3033' : '8083';\n      MqttClient = mqtt.connect(`${protocolType}://mqtt.raghavdhingra.com`, {\n        username: credentials.username,\n        password: credentials.password,\n        protocol: protocolType,\n        port: portNumber,\n      });\n      MqttClient.on('connect', () => {\n        setIsConnected(true);\n        setIsLoading(false);\n        setSuccessMsg('Connected to the Car');\n      });\n      MqttClient.on('error', () => {\n        setIsConnected(false);\n        setIsLoading(false);\n        setErrorMsg('Disconnected from the Car');\n      });\n    } else {\n      setIsConnected(false);\n      setIsLoading(false);\n      setSuccessMsg('Error while connection');\n    }\n  };\n\n  const disconnectMQTT = () => {\n    setIsConnected(false);\n    MqttClient = null;\n    setInfoMsg('Disconnected from the car');\n  };\n\n  useEffect(() => {\n    connectToMQTT();\n    // eslint-disable-next-line\n  }, [credentials]);\n\n  return (\n    <Container>\n      <Card isShadow variant='default'>\n        <Header>\n          <PointStatus isConnected={isConnected} />{' '}\n          {isConnected ? 'Active' : 'Inactive'}\n        </Header>\n      </Card>\n      <Card isShadow variant='default'>\n        <Card variant='dark'>\n          <div className='dashboard__center-align'>\n            <RoundButton\n              variant='danger'\n              margin='auto'\n              className='dashboard__img-up'\n            >\n              <img src={ARROW} alt='down_arrow' width={ARROW_WIDTH} />\n            </RoundButton>\n          </div>\n          <div className='dashboard__card-grid-2 dashboard__center-align'>\n            <RoundButton variant='danger' className='dashboard__btn-left'>\n              <img src={ARROW} alt='down_arrow' width={ARROW_WIDTH} />\n            </RoundButton>\n            <RoundButton variant='danger' className='dashboard__btn-right'>\n              <img src={ARROW} alt='down_arrow' width={ARROW_WIDTH} />\n            </RoundButton>\n          </div>\n          <div className='dashboard__center-align'>\n            <RoundButton\n              variant='danger'\n              margin='auto'\n              className='dashboard__btn-down'\n            >\n              <img src={ARROW} alt='down_arrow' width={ARROW_WIDTH} />\n            </RoundButton>\n          </div>\n        </Card>\n      </Card>\n      <Card isShadow>\n        <Button\n          variant='info'\n          title={isConnected ? 'Disconnect' : 'Connect'}\n          onClick={isConnected ? disconnectMQTT : connectToMQTT}\n        />\n      </Card>\n    </Container>\n  );\n};\n\nexport default InternetCarRemote;\n","import React, { useEffect } from 'react';\nimport Login from './Login/Login';\nimport Dashboard from './Dashboard/dashboard';\nimport { useRecoilState } from 'recoil';\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\nimport Alert from '../common/alert/alert';\nimport {\n  errorAlert,\n  infoAlert,\n  loginState,\n  successAlert,\n  warningAlert,\n} from '../RecoilAtom/state';\nimport AppList from './Dashboard/AppList/dashboardAppList';\nimport InternetCarRemote from './Dashboard/internetCarRemote/internetCarRemote';\n\nconst Base = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const [isLoggedIn] = useRecoilState(loginState);\n  const [errorMsg, setErrorMsg] = useRecoilState(errorAlert);\n  const [successMsg, setSuccessMsg] = useRecoilState(successAlert);\n  const [infoMsg, setInfoMsg] = useRecoilState(infoAlert);\n  const [warningMsg, setWarningMsg] = useRecoilState(warningAlert);\n\n  useEffect(() => {\n    if (!isLoggedIn && location.pathname !== 'login') {\n      history.push('/login');\n    }\n  }, [isLoggedIn, history, location.pathname]);\n\n  return (\n    <>\n      <div className='alert__container'>\n        {errorMsg && (\n          <Alert\n            type='error'\n            title={errorMsg}\n            handleDismiss={() => setErrorMsg('')}\n          />\n        )}\n        {infoMsg && (\n          <Alert\n            type='info'\n            title={infoMsg}\n            handleDismiss={() => setInfoMsg('')}\n          />\n        )}\n        {warningMsg && (\n          <Alert\n            type='warning'\n            title={warningMsg}\n            handleDismiss={() => setWarningMsg('')}\n          />\n        )}\n        {successMsg && (\n          <Alert\n            type='success'\n            title={successMsg}\n            handleDismiss={() => setSuccessMsg('')}\n          />\n        )}\n      </div>\n\n      <Switch>\n        <Route path='/login' exact>\n          <Login />\n        </Route>\n        <Route path='/dashboard'>\n          <Route path='/dashboard' exact>\n            <Dashboard>\n              <AppList className='app_list__container' />\n            </Dashboard>\n          </Route>\n          <Route path='/dashboard/internet-car-remote' exact>\n            <Dashboard>\n              <InternetCarRemote />\n            </Dashboard>\n          </Route>\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nexport default Base;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Base from './script/components/base';\nimport { RecoilRoot } from 'recoil';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <BrowserRouter>\n        <Base />\n      </BrowserRouter>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}