{"version":3,"sources":["script/common/header/header.jsx","script/common/body/body.jsx","script/common/loader/loader.jsx","script/common/button/button.jsx","script/common/input/input.jsx","script/common/hr/hr.jsx","script/common/card/card.jsx","script/common/container/container.jsx","script/RecoilAtom/state.js","script/utility.js","script/components/Login/Login.jsx","script/common/navbar/navbar.jsx","script/components/Dashboard/dashboard.jsx","script/common/alert/alert.jsx","script/components/Dashboard/AppList/appList.js","script/components/Dashboard/AppList/dashboardAppList.jsx","script/common/pointStatus/pointStatus.jsx","script/common/button/roundButton.jsx","images/arrow.svg","script/components/Dashboard/internetCarRemote/internetCarRemote.jsx","script/components/base.jsx","index.jsx"],"names":["Header","children","align","alignClass","center","default","className","Body","Loader","variant","variantClass","dark","Button","title","margin","isLink","href","onClick","isDisabled","isLoading","primary","secondary","danger","warning","info","success","to","disabled","Input","placeholder","type","value","onChange","e","target","Hr","Card","isShadow","isMinHeight","backgroundImage","Container","loginState","atom","key","loadingState","warningAlert","successAlert","infoAlert","errorAlert","credentialAtom","username","password","BASE_BROKER_URL","PROTOCOL_TYPE","PORT_NUMBER","PUBLISH_EVENT","BASE_PUBLISH_EVENT","ARROW_WIDTH","BUTTON_KEY","MOUSE_EVENT","Login","useRecoilState","credentials","setCredentials","isLoggedIn","setIsLoggedIn","setIsLoading","setErrorMsg","setSuccessMsg","setWarningMsg","history","useHistory","changeValue","val","useEffect","envUser","process","REACT_MQTT_USERNAME","envPass","REACT_MQTT_PASSWORD","replace","mqttValidation","mqtt","connect","protocol","port","on","Navbar","successMsg","push","Dashboard","Alert","handleDismiss","typeClass","error","setTimeout","APP_LIST","name","image","AppList","map","app","index","PointStatus","isConnected","RoundButton","onMouseDown","onMouseUp","absorbEvent_","event","window","stopPropagation","cancelBubble","returnValue","onTouchStart","onTouchMove","onTouchCancel","onTouchEnd","MqttClient","isUpKey_down","isDownKey_down","isLeftKey_down","isRightKey_down","InternetCarRemote","useState","setIsConnected","isKeyboardListener","setIsKeyboardListener","setInfoMsg","triggerCar","buttonKey","mouseEvent","publish","connectToMQTT","keyDownEventFunction","keyUpEventFunction","document","onkeydown","onkeyup","src","ARROW","alt","width","Base","location","useLocation","errorMsg","infoMsg","warningMsg","pathname","path","exact","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d6078a47.chunk.js","sourcesContent":["import React from 'react';\nimport './header.scss';\n\nconst Header = ({ children, align }) => {\n  const alignClass = {\n    center: 'center',\n    default: 'default',\n  };\n  return (\n    <div\n      className={`header header--${alignClass[align] || alignClass.default}`}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './body.scss';\n\nconst Body = ({ children }) => {\n  return (\n    <>\n      <div className='body'>{children}</div>\n    </>\n  );\n};\n\nexport default Body;\n","import React from 'react';\nimport './loader.scss';\n\nconst Loader = ({ className, variant }) => {\n  const variantClass = {\n    default: 'default',\n    dark: 'dark',\n  };\n\n  return (\n    <div className={`loader__container  ${className || ''}`}>\n      <div\n        className={`loader loader--${\n          variantClass[variantClass[variant] || variantClass.default]\n        }`}\n      ></div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Loader from '../loader/loader';\nimport './button.scss';\n\nconst Button = ({\n  title,\n  margin,\n  variant,\n  isLink,\n  href,\n  onClick,\n  isDisabled,\n  isLoading,\n  className,\n}) => {\n  const variantClass = {\n    primary: 'primary',\n    secondary: 'secondary',\n    danger: 'danger',\n    warning: 'warning',\n    info: 'info',\n    success: 'success',\n  };\n\n  return (\n    <div className={`button__container button--${className || ''}`}>\n      {!isLink ? (\n        <button\n          className={`button button__${margin}Margin button__${\n            variantClass[variant] || variantClass.primary\n          }`}\n          onClick={onClick}\n          disabled={isDisabled}\n        >\n          {isLoading ? <Loader /> : <span>{title}</span>}\n        </button>\n      ) : (\n        <Link\n          className={`button button__${margin || ''}Margin button__${\n            variantClass[variant] || variantClass.primary\n          }`}\n          to={isDisabled ? '' : href}\n        >\n          {isLoading ? <Loader /> : <span>{title}</span>}\n        </Link>\n      )}\n    </div>\n  );\n};\n\nexport default Button;\n","import React from 'react';\nimport './input.scss';\n\nconst Input = ({ placeholder, type, value, onChange, margin, isDisabled }) => {\n  const handleChange = (e) => {\n    if (onChange) {\n      onChange(e.target.value);\n    }\n  };\n\n  return (\n    <input\n      className={`input input__${margin}Margin`}\n      placeholder={placeholder}\n      type={type}\n      value={value}\n      disabled={isDisabled}\n      onChange={handleChange}\n    />\n  );\n};\n\nexport default Input;\n","import React from 'react';\nimport './hr.scss';\n\nconst Hr = ({ variant }) => {\n  const variantClass = variant === 'dark' ? 'dark' : 'default';\n\n  return <div className={`hr hr__${variantClass}`} />;\n};\n\nexport default Hr;\n","import React from 'react';\nimport './card.scss';\n\nconst Card = ({\n  variant,\n  children,\n  isShadow,\n  isMinHeight,\n  backgroundImage,\n  className,\n}) => {\n  const variantClass = {\n    dark: 'dark',\n    default: 'default',\n  };\n\n  return (\n    <div\n      className={`card card__${variantClass[variant] || variantClass.default} ${\n        className || ''\n      } card__${isShadow ? 'shadow' : ''} card__${\n        isMinHeight ? 'min_height' : ''\n      } card__image card__image--${backgroundImage || ''}`}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport './container.scss';\n\nconst Container = ({ children }) => {\n  return <div className='container'>{children}</div>;\n};\n\nexport default Container;\n","import { atom } from 'recoil';\n\nexport const loginState = atom({\n  key: 'loginState',\n  default: false,\n});\n\nexport const loadingState = atom({\n  key: 'loading',\n  default: false,\n});\n\nexport const warningAlert = atom({\n  key: 'warning',\n  default: '',\n});\nexport const successAlert = atom({\n  key: 'success',\n  default: '',\n});\nexport const infoAlert = atom({\n  key: 'info',\n  default: '',\n});\nexport const errorAlert = atom({\n  key: 'error',\n  default: '',\n});\n\nexport const credentialAtom = atom({\n  key: 'credentialAtom',\n  default: {\n    username: '',\n    password: '',\n  },\n});\n","export const BASE_BROKER_URL = 'mqtt.raghavdhingra.com';\n\nexport const PROTOCOL_TYPE =\n  process.env.NODE_ENV === 'development' ? 'ws' : 'wss';\n\nexport const PORT_NUMBER =\n  process.env.NODE_ENV === 'development' ? '3033' : '8083';\n\nexport const PUBLISH_EVENT = {\n  up: 'up',\n  down: 'down',\n  right: 'right',\n  left: 'left',\n};\n\nexport const BASE_PUBLISH_EVENT = 'car/remote/';\n\nexport const ARROW_WIDTH = '40px';\n\nexport const BUTTON_KEY = {\n  up: 'button_up',\n  down: 'button_down',\n  right: 'button_right',\n  left: 'button_left',\n};\n\nexport const MOUSE_EVENT = {\n  up: 'mouse_up',\n  down: 'mouse_down',\n};\n","import React, { useEffect } from 'react';\nimport mqtt from 'mqtt';\nimport { useHistory } from 'react-router';\nimport { useRecoilState } from 'recoil';\nimport Header from '../../common/header/header';\nimport Body from '../../common/body/body';\nimport Button from '../../common/button/button';\nimport Input from '../../common/input/input';\nimport Hr from '../../common/hr/hr';\nimport Card from '../../common/card/card';\nimport Container from '../../common/container/container';\nimport {\n  credentialAtom,\n  loginState,\n  loadingState,\n  errorAlert,\n  successAlert,\n  warningAlert,\n} from '../../RecoilAtom/state';\n\nimport './Login.scss';\nimport { BASE_BROKER_URL, PORT_NUMBER, PROTOCOL_TYPE } from '../../utility';\n\nconst Login = () => {\n  const [credentials, setCredentials] = useRecoilState(credentialAtom);\n  const [isLoggedIn, setIsLoggedIn] = useRecoilState(loginState);\n  const [isLoading, setIsLoading] = useRecoilState(loadingState);\n  // eslint-disable-next-line\n  const [errorMsg, setErrorMsg] = useRecoilState(errorAlert);\n  // eslint-disable-next-line\n  const [successMsg, setSuccessMsg] = useRecoilState(successAlert);\n  // eslint-disable-next-line\n  const [warningMsg, setWarningMsg] = useRecoilState(warningAlert);\n\n  const history = useHistory();\n\n  const changeValue = (key, val) => {\n    setCredentials({ ...credentials, [key]: val });\n  };\n\n  useEffect(() => {\n    const envUser = process.env.REACT_MQTT_USERNAME;\n    const envPass = process.env.REACT_MQTT_PASSWORD;\n    if (envUser && envPass) {\n      setCredentials({ username: envUser, password: envPass });\n    }\n  }, [setCredentials]);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      history.replace('/dashboard');\n    }\n  }, [history, isLoggedIn]);\n\n  const establishConnection = () => {\n    setIsLoading(true);\n    setWarningMsg('Connection is Progress...');\n\n    if (credentials.username && credentials.password) {\n      const mqttValidation = mqtt.connect(\n        `${PROTOCOL_TYPE}://${BASE_BROKER_URL}`,\n        {\n          username: credentials.username,\n          password: credentials.password,\n          protocol: PROTOCOL_TYPE,\n          port: PORT_NUMBER,\n        }\n      );\n      mqttValidation.on('error', () => {\n        setIsLoading(false);\n        setErrorMsg('Invalid Credentials');\n        setIsLoggedIn(false);\n      });\n      mqttValidation.on('connect', () => {\n        setIsLoading(false);\n        setSuccessMsg('Connection Established');\n        setIsLoggedIn(true);\n      });\n    } else {\n      setIsLoading(false);\n      setErrorMsg('Empty Credential');\n      setIsLoggedIn(false);\n    }\n  };\n\n  return (\n    <Container>\n      <Card>\n        <Card variant='dark' isShadow>\n          <Header>Login</Header>\n          <Hr />\n          <Body>\n            <Input\n              placeholder='Username'\n              type='text'\n              isDisabled={isLoading}\n              value={credentials.username}\n              onChange={(e) => changeValue('username', e)}\n            />\n            <Input\n              placeholder='Password'\n              isDisabled={isLoading}\n              type='password'\n              value={credentials.password}\n              margin='top'\n              onChange={(e) => changeValue('password', e)}\n            />\n            <Button\n              isDisabled={isLoading}\n              isLoading={isLoading}\n              title='Check In'\n              margin='top'\n              onClick={establishConnection}\n            />\n          </Body>\n        </Card>\n      </Card>\n    </Container>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport { useRecoilState } from 'recoil';\nimport {\n  credentialAtom,\n  loadingState,\n  loginState,\n  successAlert,\n} from '../../RecoilAtom/state';\nimport { useHistory } from 'react-router-dom';\nimport Button from '../button/button';\nimport './navbar.scss';\n\nconst Navbar = ({ className }) => {\n  const [credentials, setCredentials] = useRecoilState(credentialAtom);\n  const [isLoading, setIsLoading] = useRecoilState(loadingState);\n  const [isLoggedIn, setIsLoggedIn] = useRecoilState(loginState);\n  const [successMsg, setSuccessMsg] = useRecoilState(successAlert);\n  const history = useHistory();\n\n  const logoutSession = () => {\n    if (isLoggedIn) {\n      setCredentials({ username: '', password: '' });\n      setIsLoading(false);\n      setIsLoggedIn(false);\n      if (successMsg === 'Successfully Logged out') {\n        setSuccessMsg('Successfully Logged out');\n      }\n    }\n  };\n\n  return (\n    <div className={`navbar ${className || ''}`}>\n      <Button\n        title='Home'\n        className='not-center'\n        onClick={() => history.push('/dashboard')}\n        variant='warning'\n      />\n      <div className='navbar__leftFlex'>\n        <span className='navbar__username'>🏠 {credentials.username}</span>\n        <Button\n          title='Logout'\n          onClick={logoutSession}\n          isDisabled={isLoading}\n          isLoading={isLoading}\n          variant='danger'\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport Container from '../../common/container/container';\nimport Navbar from '../../common/navbar/navbar';\nimport './dashboard.scss';\n\nconst Dashboard = ({ children }) => {\n  return (\n    <Container>\n      <Navbar />\n      {children}\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","import React, { useEffect } from 'react';\nimport './alert.scss';\n\nconst Alert = ({ title, type, handleDismiss }) => {\n  const typeClass = {\n    info: 'info',\n    error: 'error',\n    warning: 'warning',\n    success: 'success',\n  };\n\n  useEffect(() => {\n    if (handleDismiss) {\n      setTimeout(() => {\n        handleDismiss();\n      }, 2000);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  return title ? (\n    <div className={`alert alert__${typeClass[type] || typeClass.info}`}>\n      {title}\n    </div>\n  ) : null;\n};\n\nexport default Alert;\n","export const APP_LIST = [\n  {\n    name: 'Internet Car Remote',\n    image: 'car',\n    key: 'INTERNET_CAR_REMOTE',\n    href: '/internet-car-remote',\n  },\n  {\n    name: 'Workspace Light Switch',\n    image: 'bulb',\n    key: 'WORKSPACE_LIGHT_SWITCH',\n    href: '/workspace-light-switch',\n  },\n];\n","import React from 'react';\nimport { APP_LIST } from './appList';\nimport Card from '../../../common/card/card';\nimport Header from '../../../common/header/header';\nimport Button from '../../../common/button/button';\nimport './dashboardAppList.scss';\n\nconst AppList = ({ className }) => {\n  return (\n    <div className={`app_list ${className || ''}`}>\n      {APP_LIST.map((app, index) => (\n        <Card\n          key={app.key}\n          isShadow\n          variant={index % 3 === 0 ? 'dark' : ''}\n          isMinHeight\n          backgroundImage={app.image}\n        >\n          <Header align='center'>{app.name}</Header>\n          <Button\n            title='Connect'\n            variant={index % 3 === 0 ? 'info' : 'secondary'}\n            href={`/dashboard${app.href}`}\n            isLink\n          />\n        </Card>\n      ))}\n    </div>\n  );\n};\n\nexport default AppList;\n","import React from 'react';\nimport './pointStatus.scss';\n\nconst PointStatus = ({ className, isConnected }) => {\n  return (\n    <div\n      className={`point_status point_status--${\n        isConnected ? 'connected' : 'not-connected'\n      } ${className || ''}`}\n    ></div>\n  );\n};\n\nexport default PointStatus;\n","import React from 'react';\n\nconst RoundButton = ({\n  className,\n  onClick,\n  title,\n  variant,\n  margin,\n  children,\n  onMouseDown,\n  onMouseUp,\n}) => {\n  const variantClass = {\n    primary: 'primary',\n    secondary: 'secondary',\n    danger: 'danger',\n    warning: 'warning',\n    info: 'info',\n    success: 'success',\n  };\n\n  function absorbEvent_(event) {\n    var e = event || window.event;\n    e.stopPropagation && e.stopPropagation();\n    e.cancelBubble = true;\n    e.returnValue = false;\n    return false;\n  }\n\n  return (\n    <button\n      onMouseDown={onMouseDown}\n      onMouseUp={onMouseUp}\n      onTouchStart={(e) => {\n        onMouseDown();\n        absorbEvent_(e);\n      }}\n      onTouchMove={absorbEvent_}\n      onTouchCancel={absorbEvent_}\n      onTouchEnd={(e) => {\n        onMouseUp();\n        absorbEvent_(e);\n      }}\n      onClick={onClick}\n      className={`button button--round button__${margin}Margin button__${\n        variant ? variantClass[variant] : variantClass.primary\n      } ${className || ''}`}\n    >\n      {title}\n      {children}\n    </button>\n  );\n};\n\nexport default RoundButton;\n","export default __webpack_public_path__ + \"static/media/arrow.9d3e8a82.svg\";","import React, { useEffect, useState } from 'react';\nimport mqtt from 'mqtt';\nimport { useRecoilState } from 'recoil';\nimport Card from '../../../common/card/card';\nimport Container from '../../../common/container/container';\nimport {\n  credentialAtom,\n  errorAlert,\n  infoAlert,\n  loadingState,\n  successAlert,\n  warningAlert,\n} from '../../../RecoilAtom/state';\nimport Header from '../../../common/header/header';\nimport PointStatus from '../../../common/pointStatus/pointStatus';\nimport RoundButton from '../../../common/button/roundButton';\nimport Button from '../../../common/button/button';\nimport ARROW from '../../../../images/arrow.svg';\nimport {\n  BASE_BROKER_URL,\n  PORT_NUMBER,\n  PROTOCOL_TYPE,\n  BASE_PUBLISH_EVENT,\n  ARROW_WIDTH,\n  BUTTON_KEY,\n  MOUSE_EVENT,\n  PUBLISH_EVENT,\n} from '../../../utility';\n\nlet MqttClient = null;\nlet isUpKey_down = false;\nlet isDownKey_down = false;\nlet isLeftKey_down = false;\nlet isRightKey_down = false;\n\nconst InternetCarRemote = () => {\n  const [isConnected, setIsConnected] = useState(false);\n  const [isKeyboardListener, setIsKeyboardListener] = useState(false);\n\n  const [credentials] = useRecoilState(credentialAtom);\n  // eslint-disable-next-line\n  const [isLoading, setIsLoading] = useRecoilState(loadingState);\n  // eslint-disable-next-line\n  const [errorMsg, setErrorMsg] = useRecoilState(errorAlert);\n  // eslint-disable-next-line\n  const [successMsg, setSuccessMsg] = useRecoilState(successAlert);\n  // eslint-disable-next-line\n  const [warningMsg, setWarningMsg] = useRecoilState(warningAlert);\n  // eslint-disable-next-line\n  const [infoMsg, setInfoMsg] = useRecoilState(infoAlert);\n\n  const triggerCar = (buttonKey, mouseEvent) => {\n    if (isConnected) {\n      if (buttonKey === BUTTON_KEY.up) {\n        if (mouseEvent === MOUSE_EVENT.up) {\n          MqttClient.publish(`${BASE_PUBLISH_EVENT}${PUBLISH_EVENT.up}`, '0');\n        } else if (mouseEvent === MOUSE_EVENT.down) {\n          MqttClient.publish(`${BASE_PUBLISH_EVENT}${PUBLISH_EVENT.up}`, '1');\n        }\n      } else if (buttonKey === BUTTON_KEY.left) {\n        if (mouseEvent === MOUSE_EVENT.up) {\n          MqttClient.publish(`${BASE_PUBLISH_EVENT}${PUBLISH_EVENT.left}`, '0');\n        } else if (mouseEvent === MOUSE_EVENT.down) {\n          MqttClient.publish(`${BASE_PUBLISH_EVENT}${PUBLISH_EVENT.left}`, '1');\n        }\n      } else if (buttonKey === BUTTON_KEY.right) {\n        if (mouseEvent === MOUSE_EVENT.up) {\n          MqttClient.publish(\n            `${BASE_PUBLISH_EVENT}${PUBLISH_EVENT.right}`,\n            '0'\n          );\n        } else if (mouseEvent === MOUSE_EVENT.down) {\n          MqttClient.publish(\n            `${BASE_PUBLISH_EVENT}${PUBLISH_EVENT.right}`,\n            '1'\n          );\n        }\n      } else if (buttonKey === BUTTON_KEY.down) {\n        if (mouseEvent === MOUSE_EVENT.up) {\n          MqttClient.publish(`${BASE_PUBLISH_EVENT}${PUBLISH_EVENT.down}`, '0');\n        } else if (mouseEvent === MOUSE_EVENT.down) {\n          MqttClient.publish(`${BASE_PUBLISH_EVENT}${PUBLISH_EVENT.down}`, '1');\n        }\n      }\n    }\n  };\n\n  const connectToMQTT = () => {\n    setWarningMsg('Connecting to Car...');\n    if (credentials.username && credentials.password) {\n      setIsLoading(true);\n      MqttClient = mqtt.connect(`${PROTOCOL_TYPE}://${BASE_BROKER_URL}`, {\n        username: credentials.username,\n        password: credentials.password,\n        protocol: PROTOCOL_TYPE,\n        port: PORT_NUMBER,\n      });\n      MqttClient.on('connect', () => {\n        setIsConnected(true);\n        setIsLoading(false);\n        setSuccessMsg('Connected to the Car');\n      });\n      MqttClient.on('error', () => {\n        setIsConnected(false);\n        setIsLoading(false);\n        setErrorMsg('Disconnected from the Car');\n      });\n    } else {\n      setIsConnected(false);\n      setIsLoading(false);\n      setSuccessMsg('Error while connection');\n    }\n  };\n\n  const disconnectMQTT = () => {\n    setIsConnected(false);\n    MqttClient = null;\n    setInfoMsg('Disconnected from the car');\n  };\n\n  const keyDownEventFunction = (e) => {\n    if (e.key === 'ArrowUp') {\n      if (!isUpKey_down) {\n        isUpKey_down = true;\n        triggerCar(BUTTON_KEY.up, MOUSE_EVENT.down);\n      }\n    } else if (e.key === 'ArrowLeft') {\n      if (!isLeftKey_down) {\n        isLeftKey_down = true;\n        triggerCar(BUTTON_KEY.left, MOUSE_EVENT.down);\n      }\n    } else if (e.key === 'ArrowRight') {\n      if (!isRightKey_down) {\n        isRightKey_down = true;\n        triggerCar(BUTTON_KEY.right, MOUSE_EVENT.down);\n      }\n    } else if (e.key === 'ArrowDown') {\n      if (!isDownKey_down) {\n        isDownKey_down = true;\n        triggerCar(BUTTON_KEY.down, MOUSE_EVENT.down);\n      }\n    }\n  };\n\n  const keyUpEventFunction = (e) => {\n    if (e.key === 'ArrowUp') {\n      isUpKey_down = false;\n      triggerCar(BUTTON_KEY.up, MOUSE_EVENT.up);\n    } else if (e.key === 'ArrowLeft') {\n      isLeftKey_down = false;\n      triggerCar(BUTTON_KEY.left, MOUSE_EVENT.up);\n    } else if (e.key === 'ArrowRight') {\n      isRightKey_down = false;\n      triggerCar(BUTTON_KEY.right, MOUSE_EVENT.up);\n    } else if (e.key === 'ArrowDown') {\n      isDownKey_down = false;\n      triggerCar(BUTTON_KEY.down, MOUSE_EVENT.up);\n    }\n  };\n\n  const addKeyboardListener = () => {\n    setInfoMsg(\n      'Keyboard is engaged. Now, you can control the car with the arrow keys.'\n    );\n    document.onkeydown = keyDownEventFunction;\n    document.onkeyup = keyUpEventFunction;\n  };\n\n  const removeKeyboardListener = () => {\n    setWarningMsg(\n      'Keyboard is disengaged. You can not use the keyboard as a controller.'\n    );\n    document.onkeydown = null;\n    document.onkeyup = null;\n  };\n\n  useEffect(() => {\n    if (isKeyboardListener) {\n      addKeyboardListener();\n    } else {\n      removeKeyboardListener();\n    }\n    // eslint-disable-next-line\n  }, [isKeyboardListener]);\n\n  useEffect(() => {\n    connectToMQTT();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <Container>\n      <Card isShadow variant='default'>\n        <Header>\n          <PointStatus isConnected={isConnected} />{' '}\n          {isConnected ? 'Active' : 'Inactive'}\n        </Header>\n      </Card>\n      <Card isShadow variant='default'>\n        <Card variant='dark'>\n          <div className='dashboard__center-align'>\n            <RoundButton\n              variant='danger'\n              margin='auto'\n              className='dashboard__img-up'\n              onMouseDown={() => triggerCar(BUTTON_KEY.up, MOUSE_EVENT.down)}\n              onMouseUp={() => triggerCar(BUTTON_KEY.up, MOUSE_EVENT.up)}\n            >\n              <img src={ARROW} alt='down_arrow' width={ARROW_WIDTH} />\n            </RoundButton>\n          </div>\n          <div className='dashboard__card-grid-2 dashboard__center-align'>\n            <RoundButton\n              variant='danger'\n              className='dashboard__btn-left'\n              onMouseDown={() => triggerCar(BUTTON_KEY.left, MOUSE_EVENT.down)}\n              onMouseUp={() => triggerCar(BUTTON_KEY.left, MOUSE_EVENT.up)}\n            >\n              <img src={ARROW} alt='down_arrow' width={ARROW_WIDTH} />\n            </RoundButton>\n            <RoundButton\n              variant='danger'\n              className='dashboard__btn-right'\n              onMouseDown={() => triggerCar(BUTTON_KEY.right, MOUSE_EVENT.down)}\n              onMouseUp={() => triggerCar(BUTTON_KEY.right, MOUSE_EVENT.up)}\n            >\n              <img src={ARROW} alt='down_arrow' width={ARROW_WIDTH} />\n            </RoundButton>\n          </div>\n          <div className='dashboard__center-align'>\n            <RoundButton\n              variant='danger'\n              margin='auto'\n              className='dashboard__btn-down'\n              onMouseDown={() => triggerCar(BUTTON_KEY.down, MOUSE_EVENT.down)}\n              onMouseUp={() => triggerCar(BUTTON_KEY.down, MOUSE_EVENT.up)}\n            >\n              <img src={ARROW} alt='down_arrow' width={ARROW_WIDTH} />\n            </RoundButton>\n          </div>\n        </Card>\n      </Card>\n      <Card isShadow className='dashboard__flex'>\n        <Button\n          variant='success'\n          className='dashboard__mobile_disable'\n          title={isKeyboardListener ? 'Disengage Keyboard' : 'Engage Keyboard'}\n          onClick={() => setIsKeyboardListener(!isKeyboardListener)}\n        />\n        <Button\n          variant='info'\n          isDisabled={isLoading}\n          isLoading={isLoading}\n          title={isConnected ? 'Disconnect' : 'Connect'}\n          onClick={isConnected ? disconnectMQTT : connectToMQTT}\n        />\n      </Card>\n    </Container>\n  );\n};\n\nexport default InternetCarRemote;\n","import React, { useEffect } from 'react';\nimport Login from './Login/Login';\nimport Dashboard from './Dashboard/dashboard';\nimport { useRecoilState } from 'recoil';\nimport { Route, Switch, useHistory, useLocation } from 'react-router-dom';\nimport Alert from '../common/alert/alert';\nimport {\n  errorAlert,\n  infoAlert,\n  loginState,\n  successAlert,\n  warningAlert,\n} from '../RecoilAtom/state';\nimport AppList from './Dashboard/AppList/dashboardAppList';\nimport InternetCarRemote from './Dashboard/internetCarRemote/internetCarRemote';\n\nconst Base = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const [isLoggedIn] = useRecoilState(loginState);\n  const [errorMsg, setErrorMsg] = useRecoilState(errorAlert);\n  const [successMsg, setSuccessMsg] = useRecoilState(successAlert);\n  const [infoMsg, setInfoMsg] = useRecoilState(infoAlert);\n  const [warningMsg, setWarningMsg] = useRecoilState(warningAlert);\n\n  useEffect(() => {\n    if (!isLoggedIn && location.pathname !== 'login') {\n      history.push('/login');\n    }\n  }, [isLoggedIn, history, location.pathname]);\n\n  return (\n    <>\n      <div className='alert__container'>\n        {errorMsg && (\n          <Alert\n            type='error'\n            title={errorMsg}\n            handleDismiss={() => setErrorMsg('')}\n          />\n        )}\n        {infoMsg && (\n          <Alert\n            type='info'\n            title={infoMsg}\n            handleDismiss={() => setInfoMsg('')}\n          />\n        )}\n        {warningMsg && (\n          <Alert\n            type='warning'\n            title={warningMsg}\n            handleDismiss={() => setWarningMsg('')}\n          />\n        )}\n        {successMsg && (\n          <Alert\n            type='success'\n            title={successMsg}\n            handleDismiss={() => setSuccessMsg('')}\n          />\n        )}\n      </div>\n\n      <Switch>\n        <Route path='/login' exact>\n          <Login />\n        </Route>\n        <Route path='/dashboard'>\n          <Route path='/dashboard' exact>\n            <Dashboard>\n              <AppList className='app_list__container' />\n            </Dashboard>\n          </Route>\n          <Route path='/dashboard/internet-car-remote' exact>\n            <Dashboard>\n              <InternetCarRemote />\n            </Dashboard>\n          </Route>\n        </Route>\n      </Switch>\n    </>\n  );\n};\n\nexport default Base;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Base from './script/components/base';\nimport { RecoilRoot } from 'recoil';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <BrowserRouter>\n        <Base />\n      </BrowserRouter>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}